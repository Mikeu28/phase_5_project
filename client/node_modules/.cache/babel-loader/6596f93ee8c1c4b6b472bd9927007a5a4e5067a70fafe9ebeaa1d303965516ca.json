{"ast":null,"code":"var _jsxFileName = \"/home/mikeu28/Flatiron/Phase5/phase_5_project/client/src/CardContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport ClassCard from './ClassCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardContainer({\n  data\n}) {\n  _s();\n  const [level, setLevel] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const paladinLevel = 0;\n  const fighterLevel = 0;\n  const wizardLevel = 0;\n  function handleClick() {\n    setIsOpen(!isOpen);\n  }\n  ;\n  function handleLevel(e) {\n    console.log(e);\n    if (level < 12) {\n      setLevel(level + 1);\n      setIsOpen(false);\n    } else {\n      setLevel(0);\n      setIsOpen(false);\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isOpen,\n      onRequestClose: () => setIsOpen(false),\n      children: data.map(names => /*#__PURE__*/_jsxDEV(ClassCard, {\n        handleLevel: handleLevel,\n        name: names.name\n      }, names.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this)\n  // <button onClick = { data.map( (names) => <ClassCard name = { names.name } key = { names.id } /> ) } >+</button>\n  // <ul>{ data.map( (names) => <ClassCard name = { names.name } key = { names.id }/> ) }</ul>\n  ;\n}\n_s(CardContainer, \"XnaDzCGLIs6ISbstknoacuqPelA=\");\n_c = CardContainer;\n;\nexport default CardContainer;\nvar _c;\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useState","ReactModal","ClassCard","jsxDEV","_jsxDEV","CardContainer","data","_s","level","setLevel","isOpen","setIsOpen","paladinLevel","fighterLevel","wizardLevel","handleClick","handleLevel","e","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onRequestClose","map","names","name","id","_c","$RefreshReg$"],"sources":["/home/mikeu28/Flatiron/Phase5/phase_5_project/client/src/CardContainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport ClassCard from './ClassCard.js'\n\nfunction CardContainer ( { data } ) {\n    const [ level, setLevel ] = useState( 0 );\n    const [ isOpen, setIsOpen ] = useState( false );\n\n    const paladinLevel = 0\n    const fighterLevel = 0\n    const wizardLevel = 0\n\n    function handleClick () {\n        setIsOpen( !isOpen )\n    };\n\n    function handleLevel ( e ) {\n        console.log( e )\n        if ( level < 12 ) {\n            setLevel(level + 1);\n            setIsOpen( false )\n        } else {\n            setLevel( 0 )\n            setIsOpen( false )\n        }\n\n\n        \n    };\n\n    return (\n        <div>\n            <button onClick = { handleClick }>+</button>\n            <ReactModal\n                isOpen = { isOpen }\n                onRequestClose = { () => setIsOpen( false ) }\n            >\n                { data.map( (names) => <ClassCard handleLevel = { handleLevel } name = { names.name } key = { names.id } /> ) }\n            </ReactModal>\n            <p>{ level }</p>\n        </div>\n        // <button onClick = { data.map( (names) => <ClassCard name = { names.name } key = { names.id } /> ) } >+</button>\n        // <ul>{ data.map( (names) => <ClassCard name = { names.name } key = { names.id }/> ) }</ul>\n    )\n};\n\nexport default CardContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,SAAS,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,aAAaA,CAAG;EAAEC;AAAK,CAAC,EAAG;EAAAC,EAAA;EAChC,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAE,GAAGT,QAAQ,CAAE,CAAE,CAAC;EACzC,MAAM,CAAEU,MAAM,EAAEC,SAAS,CAAE,GAAGX,QAAQ,CAAE,KAAM,CAAC;EAE/C,MAAMY,YAAY,GAAG,CAAC;EACtB,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAMC,WAAW,GAAG,CAAC;EAErB,SAASC,WAAWA,CAAA,EAAI;IACpBJ,SAAS,CAAE,CAACD,MAAO,CAAC;EACxB;EAAC;EAED,SAASM,WAAWA,CAAGC,CAAC,EAAG;IACvBC,OAAO,CAACC,GAAG,CAAEF,CAAE,CAAC;IAChB,IAAKT,KAAK,GAAG,EAAE,EAAG;MACdC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACnBG,SAAS,CAAE,KAAM,CAAC;IACtB,CAAC,MAAM;MACHF,QAAQ,CAAE,CAAE,CAAC;MACbE,SAAS,CAAE,KAAM,CAAC;IACtB;EAIJ;EAAC;EAED,oBACIP,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAQiB,OAAO,EAAKN,WAAa;MAAAK,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5CrB,OAAA,CAACH,UAAU;MACPS,MAAM,EAAKA,MAAQ;MACnBgB,cAAc,EAAKA,CAAA,KAAMf,SAAS,CAAE,KAAM,CAAG;MAAAS,QAAA,EAE3Cd,IAAI,CAACqB,GAAG,CAAGC,KAAK,iBAAKxB,OAAA,CAACF,SAAS;QAACc,WAAW,EAAKA,WAAa;QAACa,IAAI,EAAKD,KAAK,CAACC;MAAM,GAASD,KAAK,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrG,CAAC,eACbrB,OAAA;MAAAgB,QAAA,EAAKZ;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf;EACL;EACA;EAAA;AAER;AAAClB,EAAA,CAxCQF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAwCrB;AAED,eAAeA,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}