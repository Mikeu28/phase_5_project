{"ast":null,"code":"var _jsxFileName = \"/home/mikeu28/Flatiron/Phase5/phase_5_project/client/src/CardContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport ClassSelection from './ClassSelection.js';\nimport ClassCard from './ClassCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardContainer({\n  data\n}) {\n  _s();\n  const [level, setLevel] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [classLevel, setClassLevel] = useState([]);\n  function handleClick() {\n    setIsOpen(!isOpen);\n    console.log(classLevel);\n  }\n  ;\n  function handleLevel(e) {\n    setIsOpen(false);\n    setClassLevel([{\n      className: e.target.name,\n      level: 1,\n      classId: e.target.id\n    }, ...classLevel]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isOpen,\n      onRequestClose: () => setIsOpen(false),\n      children: data.map(names => {\n        let alreadyExists = false;\n        for (const element of classLevel) {\n          if (element['classId'] == names.id) {\n            alreadyExists = true;\n          }\n        }\n        if (alreadyExists === false) {\n          return /*#__PURE__*/_jsxDEV(ClassSelection, {\n            id: names.id,\n            handleLevel: handleLevel,\n            name: names.name\n          }, names.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 32\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Level: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: classLevel.map(element => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [element.className, \" Level: \", element.level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(CardContainer, \"gcuf9cw8z9qFhQpjaoGixHLWl4Y=\");\n_c = CardContainer;\n;\nexport default CardContainer;\nvar _c;\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useState","ReactModal","ClassSelection","ClassCard","jsxDEV","_jsxDEV","CardContainer","data","_s","level","setLevel","isOpen","setIsOpen","classLevel","setClassLevel","handleClick","console","log","handleLevel","e","className","target","name","classId","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onRequestClose","map","names","alreadyExists","element","_c","$RefreshReg$"],"sources":["/home/mikeu28/Flatiron/Phase5/phase_5_project/client/src/CardContainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport ClassSelection from './ClassSelection.js'\nimport ClassCard from './ClassCard'\n\nfunction CardContainer ( { data } ) {\n    const [ level, setLevel ] = useState( 0 );\n    const [ isOpen, setIsOpen ] = useState( false );\n    const [ classLevel, setClassLevel ] = useState( [] );\n\n\n    function handleClick () {\n        setIsOpen( !isOpen )\n        console.log(classLevel)\n    };\n\n    function handleLevel ( e ) {\n        setIsOpen( false )\n        setClassLevel( [\n            { className : e.target.name, level : 1, classId : e.target.id },\n            ...classLevel\n        ] );\n    }\n\n    return (\n        <div>\n            <button onClick = { handleClick }>+</button>\n            <ReactModal\n                isOpen = { isOpen }\n                onRequestClose = { () => setIsOpen( false ) }\n            >\n                \n                { data.map( ( names ) => {\n                    let alreadyExists = false\n                    for (const element of classLevel) {\n                        if ( element['classId'] == names.id ) {\n                            alreadyExists = true\n                        }\n                    } \n                    if ( alreadyExists === false ) {\n                        return <ClassSelection id = { names.id } handleLevel = { handleLevel } name = { names.name } key = { names.id } /> \n                    }\n                    return null\n                }) \n                }\n                \n\n\n            </ReactModal>\n            <p>Total Level: { level }</p>\n            <div>{ classLevel.map( ( element ) => <p>{ element.className } Level: { element.level }</p>  )}</div>\n        </div>\n    )\n};\n\nexport default CardContainer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}